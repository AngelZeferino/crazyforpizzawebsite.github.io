/* Navbar */
html{
    scroll-behavior: smooth;
}
.navbar {
    display: flex;
    align-items: center;
    padding: var(--navbar-padding, 0.5rem);
    min-height: 4rem/* 64px */;
    width: 100%;
}
:where(.navbar > *) {
    display: inline-flex;
    align-items: center;
}

.bg-base-100 {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
}

.flex-1 {
    flex: 1 1 0%;
}
@media screen and (max-width: 1012px) {
    .textSize {
      font-size:20px;
      display:flex;
    }
  }

@media screen and (max-width: 948px) {
    .textSize {
      font-size:17px;
      display:flex;
    }
  }
@media screen and (max-width: 900px) {
    .textSize {
      font-size:16px;
      display:flex;
    }
  }
 

@media screen and (max-width: 451px) {
    .textSize {
      font-size:16px;
      display:flex;
    }
  }
@media screen and (max-width: 320px) {
    .textSize {
      font-size:16px;
      display:flex;
    }
  }
.normal-case {
    text-transform: none;
}

.flex-none {
    flex: none;
}


.menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;

}

.menu.horizontal {
    display: inline-flex;
    flex-direction: row;
}
.menu.horizontal :where(li) {
    flex-direction: row;
}
:where(.menu li) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch;
}
.menu :where(li:not(.menu-title)) > :where(*:not(ul)) {
    display: flex;
}
.menu :where(li:not(.disabled):not(.menu-title)) > :where(*:not(ul)) {
    cursor: pointer;
    user-select: none;
    align-items: center;
    outline: 2px solid transparent;
    outline-offset: 2px;
}
.menu > :where(li > *:not(ul):focus) {
    outline: 2px solid transparent;
    outline-offset: 2px;
}
.menu > :where(li.disabled > *:not(ul):focus) {
    cursor: auto;
}
.menu > :where(li) :where(ul) {
    display: flex;
    flex-direction: column;
    align-items: stretch;
}
.menu > :where(li) > :where(ul) {
    position: absolute;
    display: none;
    top: initial;
    left: 100%;
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}
.menu > :where(li:hover) > :where(ul) {
    display: flex;
}
.menu > :where(li:focus) > :where(ul) {
    display: flex;
}
.menu.horizontal li.bordered > a,
        .menu.horizontal li.bordered > button,
        .menu.horizontal li.bordered > span {
    border-left-width: 0px;
    border-bottom-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu.horizontal li.bordered > a,
        .menu.horizontal li.bordered > button,
        .menu.horizontal li.bordered > span {
    border-left-width: 0px;
    border-bottom-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu.horizontal li.bordered > a,
        .menu.horizontal li.bordered > button,
        .menu.horizontal li.bordered > span {
    border-left-width: 0px;
    border-bottom-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  .menu[class^="p-"]:not(.menu[class^="p-0"]) li > * {
    border-radius: var(--rounded-btn, 0.5rem);
}
.menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  .menu[class^="p-"]:not(.menu[class^="p-0"]) li > * {
    border-radius: var(--rounded-btn, 0.5rem);
}
.menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  .menu[class^="p-"]:not(.menu[class^="p-0"]) li > * {
    border-radius: var(--rounded-btn, 0.5rem);
}
.menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  .menu[class^="p-"]:not(.menu[class^="p-0"]) li > * {
    border-radius: var(--rounded-btn, 0.5rem);
}
.menu :where(li.bordered > *) {
    border-left-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu :where(li) > :where(*:not(ul)) {
    gap: 0.75rem/* 12px */;
    padding-left: 1rem/* 16px */;
    padding-right: 1rem/* 16px */;
    padding-top: 0.75rem/* 12px */;
    padding-bottom: 0.75rem/* 12px */;
    color: currentColor;
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):focus),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):hover) {
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1;
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):focus),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):hover) {
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1;
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):active) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active),
  .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):active) {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}
.menu :where(li:empty) {
    margin-left: 1rem/* 16px */;
    margin-right: 1rem/* 16px */;
    margin-top: 0.5rem/* 8px */;
    margin-bottom: 0.5rem/* 8px */;
    height: 1px;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.1;
}
.menu li.disabled > * {
    user-select: none;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
}
.menu li.disabled > *:hover {
    background-color: transparent;
}
.menu li.hover-bordered a {
    border-left-width: 4px;
    border-color: transparent;
}
.menu li.hover-bordered a:hover {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu.compact li > a,
      .menu.compact li > span {
    padding-top: 0.5rem/* 8px */;
    padding-bottom: 0.5rem/* 8px */;
    font-size: 0.875rem/* 14px */;
    line-height: 1.25rem/* 20px */;
}
.menu.compact li > a,
      .menu.compact li > span {
    padding-top: 0.5rem/* 8px */;
    padding-bottom: 0.5rem/* 8px */;
    font-size: 0.875rem/* 14px */;
    line-height: 1.25rem/* 20px */;
}
.menu .menu-title > * {
    padding-top: 0.25rem/* 4px */;
    padding-bottom: 0.25rem/* 4px */;
    font-size: 0.75rem/* 12px */;
    line-height: 1rem/* 16px */;
    font-weight: 700;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.4;
}
.menu :where(li:not(.disabled)) > :where(*:not(ul)) {
    outline: 2px solid transparent;
    outline-offset: 2px;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.menu > :where(li:first-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
}
.menu > :where(li:first-child) > :where(:not(ul)) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
}
.menu > :where(li:last-child) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}
.menu > :where(li:last-child) > :where(:not(ul)) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}
.menu > :where(li) > :where(ul) :where(li) {
    width: 100%;
    white-space: nowrap;
}
.menu > :where(li) > :where(ul) :where(li) :where(ul) {
    padding-left: 1rem/* 16px */;
}
.menu > :where(li) > :where(ul) :where(li) > :where(:not(ul)) {
    width: 100%;
    white-space: nowrap;
}
.menu > :where(li) > :where(ul) > :where(li:first-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
}
.menu > :where(li) > :where(ul) > :where(li:first-child) > :where(:not(ul)) {
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: unset;
}
.menu > :where(li) > :where(ul) > :where(li:last-child) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}
.menu > :where(li) > :where(ul) > :where(li:last-child) > :where(:not(ul)) {
    border-top-left-radius: unset;
    border-top-right-radius: unset;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
}

.menu-horizontal {
    display: inline-flex;
    width: max-content;
    flex-direction: row;
}
.menu-horizontal :where(li) {
    flex-direction: row;
}
.menu-horizontal > :where(li) > :where(ul) {
    top: 100%;
    left: initial;
}
.menu-horizontal :where(li.bordered > *) {
    border-left-width: 0px;
    border-bottom-width: 4px;
}
.menu-horizontal > :where(li:first-child) {
    border-top-left-radius: inherit;
    border-top-right-radius: unset;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: inherit;
}
.menu-horizontal > :where(li:first-child) > :where(*:not(ul)) {
    border-top-left-radius: inherit;
    border-top-right-radius: unset;
    border-bottom-right-radius: unset;
    border-bottom-left-radius: inherit;
}
.menu-horizontal > :where(li:last-child) {
    border-top-left-radius: unset;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: unset;
}
.menu-horizontal > :where(li:last-child) > :where(*:not(ul)) {
    border-top-left-radius: unset;
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: unset;
}

.px-1 {
    padding-left: 0.25rem/* 4px */;
    padding-right: 0.25rem/* 4px */;
}


/* Hero */

.hero {
    display: grid;
    width: 100%;
    place-items: center;
    background-size: cover;
    background-position: center;
}
.hero > * {
    grid-column-start: 1;
    grid-row-start: 1;
}

.min-h-screen {
    min-height: 100vh;
}

.hero-overlay {
    grid-column-start: 1;
    grid-row-start: 1;
    height: 100%;
    width: 100%;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.5;
}

.bg-opacity-40 {
    --tw-bg-opacity: 0.4;
}

.hero-content {
    z-index: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    max-width: 80rem/* 1280px */;
    gap: 1rem/* 16px */;
    padding: 1rem/* 16px */;
}

.text-center {
    text-align: center;
}

.text-neutral-content {
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
}

.max-w-md {
    max-width: 28rem/* 448px */;
}

.mb-5 {
    margin-bottom: 1.25rem/* 20px */;
}

.text-5xl {
    font-size: 3rem/* 48px */;
    line-height: 1;
}

.font-bold {
    font-weight: 700;
}

.backdrop-blur-\[3px\] {
    --tw-backdrop-blur: blur(3px);
    backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.btnHome{
    background-color:red;
    border:none;
    position:absolute;
    transform:translate(-50%, -50%);
    top:100%;
    left:50%;
    padding:20px 50px;
    font-size:15px;
    font-weight:bolder;
    transition-duration:0.4s;
    cursor:pointer
}
.btnHome:hover{
    background-color:rgb(214, 26, 26);
    color:white;
    font-weight:bolder;
}

/* Foooter CSS */

.footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    row-gap: 2.5rem/* 40px */;
    column-gap: 1rem/* 16px */;
    font-size: 0.875rem/* 14px */;
    line-height: 1.25rem/* 20px */;
}
.footer > * {
    display: grid;
    place-items: start;
    gap: 0.5rem/* 8px */;
}
@media (min-width: 48rem) {
    .footer {
        grid-auto-flow: column;
    }
    .footer-center {
        grid-auto-flow: row dense;
    }
}

.p-10 {
    padding: 2.5rem/* 40px */;
}

.bg-neutral {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
}

.footer-title {
    margin-bottom: 0.5rem/* 8px */;
    font-weight: 800;
    text-transform: uppercase;
}

.grid {
    display: grid;
}

.grid-flow-col {
    grid-auto-flow: column;
}

.gap-4 {
    gap: 1rem/* 16px */;
}
.footerTitle {
    margin-bottom: 0.5rem/* 8px */;
    font-weight: 900;
    text-transform: uppercase;
}

.footerTitle2 {
    margin-bottom: 0.5rem/* 8px */;
    font-weight: 900;
    text-transform: uppercase;
}
form input{
    width:320px;
    height:45px;
    border-radius:30px;
    text-align:center;
    margin-top:20px;
    margin-bottom:40px;
    outline:none;
    border:2px solid black;
}
form button{
    background:white;
    border: 2px solid white;
    color:white;
    border-radius:30px;
    padding:10px 30px;
    font-size:15px;
    cursor:pointer;
}
@media screen and (max-width: 376px) {
    form button {
        background:white;
        border: 2px solid white;
        color:white;
        border-radius:20px;
        padding:10px 20px;
        font-size:10px;
        cursor:pointer;
    }
  }
@media screen and (max-width: 376px) {
    form input {
        width:280px;
        height:45px;
        border-radius:30px;
        text-align:center;
        margin-top:20px;
        margin-bottom:40px;
        outline:none;
        border:2px solid black;
    }
  }
@media screen and (max-width: 320px) {
    form input {
        width:200px;
        height:45px;
        border-radius:30px;
        text-align:center;
        margin-top:20px;
        margin-bottom:40px;
        outline:none;
        border:2px solid black;
    }
  }
  
.column2{
    flex-grow:2;
}

/* b
.goTop{
    position:fixed;
    bottom:40px;
    right:40px;
    font-size:22px;
    width:50px;
    height:50px;
    background:#e74c3c;
    color:white;
    border:none;
    cursor:pointer;

}
#topBtn{
    position:fixed;
    bottom:40px;
    right:30px;
    font-size:40px;
    width:50px;
    height:50px;
    background:#e74c3c;
    color:white;
    border:none;
    cursor:pointer;
    text-align:center;
    

}*/
#myBtn {
    display: none;
    position: fixed;
    bottom: 20px;
    right: 30px;
    z-index: 99;
    font-size: 18px;
    border: none;
    outline: none;
    background-color: red;
    color: black;
    cursor: pointer;
    padding: 15px;
    border-radius: 4px;
  }
  
  #myBtn:hover {
    background-color: #555;
  }
  
